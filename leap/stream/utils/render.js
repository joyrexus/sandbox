// Generated by CoffeeScript 1.6.3
(function() {
  var R2D, draw, i, parse, pitch, points, roll, root, yaw;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  R2D = 180 / Math.PI;

  pitch = function(hand) {
    return Math.round(R2D * Math.atan2(hand.direction[1], -hand.direction[2]) - 90);
  };

  yaw = function(hand) {
    return Math.round(R2D * Math.atan2(hand.direction[0], -hand.direction[2]));
  };

  roll = function(hand) {
    return Math.round(-R2D * Math.atan2(hand.palmNormal[0], -hand.palmNormal[1]));
  };

  parse = function(pos) {
    var x, y, z, _ref;
    _ref = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = pos.length; _i < _len; _i++) {
        x = pos[_i];
        _results.push(Math.round(x));
      }
      return _results;
    })(), x = _ref[0], y = _ref[1], z = _ref[2];
    return [x, -y, 350 / (350 + z)];
  };

  points = (function() {
    var _i, _len, _ref, _results;
    _ref = ['A', 'B', 'C', 'D', 'E'];
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      i = _ref[_i];
      _results.push(window[i]);
    }
    return _results;
  })();

  draw = function(frame) {
    var hand, last, opacity, point, transform, x, y, z, _i, _j, _ref, _ref1, _ref2, _ref3, _ref4;
    if (frame != null ? (_ref = frame.hands) != null ? _ref.length : void 0 : void 0) {
      window.palm.style.opacity = .75;
      hand = frame.hands[0];
      _ref1 = parse(hand.palmPosition), x = _ref1[0], y = _ref1[1], z = _ref1[2];
      transform = "translate(" + x + "px, " + y + "px) \nscale(" + z + ")\nrotateX(" + (pitch(hand)) + "deg)\nrotateZ(" + (roll(hand)) + "deg)";
      window.palm.style.webkitTransform = transform;
    } else {
      window.palm.style.opacity = 0;
    }
    if (frame != null ? (_ref2 = frame.pointables) != null ? _ref2.length : void 0 : void 0) {
      last = null;
      _ref3 = frame.pointables;
      for (i in _ref3) {
        point = _ref3[i];
        if (i > 4) {
          return;
        }
        _ref4 = parse(point.tipPosition), x = _ref4[0], y = _ref4[1], z = _ref4[2];
        transform = "translate(" + x + "px, " + y + "px) scale(" + z + ")";
        opacity = point.handId === -1 ? 0 : 1;
        points[i].style.webkitTransform = transform;
        points[i].style.opacity = opacity;
        last = parseInt(i);
      }
      if (last < 4) {
        x = last + 1;
        for (i = _i = x; x <= 4 ? _i <= 4 : _i >= 4; i = x <= 4 ? ++_i : --_i) {
          points[i.toString()].style.opacity = 0;
        }
      }
    } else {
      for (x = _j = 0; _j <= 4; x = ++_j) {
        points[x.toString()].style.opacity = 0;
      }
    }
    return '';
  };

  root.render = function(queue) {
    var duration, frame, last, run, start, step, stop;
    last = queue.length - 1;
    stop = queue[last].timestamp;
    start = queue[0].timestamp;
    console.log(last, stop, start);
    duration = (stop - start) / 1000;
    step = duration / queue.length;
    frame = 0;
    run = function() {
      if (frame === last) {
        return;
      }
      requestAnimationFrame(function() {
        return draw(queue[frame]);
      });
      frame += 1;
      return setTimeout(run, step);
    };
    return run();
  };

}).call(this);
